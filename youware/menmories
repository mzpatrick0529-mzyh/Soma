import { useState } from 'react';
import { motion } from 'framer-motion';
import { Plus, Heart, MessageCircle, Image, Video, FileText, Link, MoreHorizontal } from 'lucide-react';
import { useAppStore } from '../store/appStore';
import GlassmorphismPopup from '../components/GlassmorphismPopup';

export default function MemoriesTab() {
  const { memories, togglePopup, showPopup, popupType } = useAppStore();
  const [showMemoryPopup, setShowMemoryPopup] = useState(false);

  const memoryOptions = [
    { label: 'Text', icon: <FileText size={20} />, onClick: () => console.log('Add text') },
    { label: 'Image', icon: <Image size={20} />, onClick: () => console.log('Add image') },
    { label: 'Video', icon: <Video size={20} />, onClick: () => console.log('Add video') },
    { label: 'Website', icon: <Link size={20} />, onClick: () => console.log('Add website') },
    { label: 'Other', icon: <MoreHorizontal size={20} />, onClick: () => console.log('Add other') }
  ];

  return (
    <div className="min-h-screen bg-gray-50 pb-20">
      {/* Header */}
      <div className="bg-white border-b border-gray-200 sticky top-0 z-10">
        <div className="max-w-lg mx-auto px-4 py-4">
          <h1 className="text-2xl font-bold text-gray-900">Memories</h1>
          <p className="text-sm text-gray-600 mt-1">Your personal timeline</p>
        </div>
      </div>

      {/* Timeline */}
      <div className="max-w-lg mx-auto px-4 py-4 space-y-4">
        {memories.map((memory, index) => (
          <motion.div
            key={memory.id}
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: index * 0.1 }}
            className="bg-white rounded-2xl shadow-sm overflow-hidden"
          >
            {/* Memory Image/Video */}
            {memory.type === 'image' && memory.imageUrl && (
              <div className="aspect-video bg-gray-200 relative">
                <div className="absolute inset-0 flex items-center justify-center text-gray-400">
                  <Image size={48} />
                </div>
              </div>
            )}
            
            {memory.type === 'video' && memory.videoUrl && (
              <div className="aspect-video bg-gray-900 relative">
                <div className="absolute inset-0 flex items-center justify-center text-white">
                  <Video size={48} />
                </div>
              </div>
            )}

            {/* Memory Content */}
            <div className="p-4">
              <p className="text-gray-800 leading-relaxed">{memory.content}</p>
              
              {/* Timestamp */}
              <div className="mt-3 text-xs text-gray-500">
                {new Date(memory.timestamp).toLocaleDateString('en-US', {
                  month: 'long',
                  day: 'numeric',
                  year: 'numeric'
                })}
              </div>

              {/* Actions */}
              <div className="flex items-center gap-6 mt-4 pt-4 border-t border-gray-100">
                <button className="flex items-center gap-2 text-gray-600 hover:text-red-500 transition-colors">
                  <Heart size={20} />
                  <span className="text-sm font-medium">{memory.likes}</span>
                </button>
                <button className="flex items-center gap-2 text-gray-600 hover:text-blue-500 transition-colors">
                  <MessageCircle size={20} />
                  <span className="text-sm font-medium">{memory.comments}</span>
                </button>
              </div>
            </div>
          </motion.div>
        ))}
      </div>

      {/* Floating Action Button */}
      <motion.button
        whileHover={{ scale: 1.05 }}
        whileTap={{ scale: 0.95 }}
        onClick={() => setShowMemoryPopup(true)}
        className="fixed bottom-24 right-6 w-14 h-14 rounded-full backdrop-blur-xl bg-gradient-to-br from-blue-500/90 to-purple-600/90 shadow-2xl flex items-center justify-center text-white z-20 border border-white/30"
      >
        <Plus size={28} strokeWidth={2.5} />
      </motion.button>

      {/* Glassmorphism Popup */}
      <GlassmorphismPopup
        isOpen={showMemoryPopup}
        onClose={() => setShowMemoryPopup(false)}
        options={memoryOptions}
        position="bottom-right"
      />
    </div>
  );
}
