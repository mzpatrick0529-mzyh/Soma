import { useState } from 'react';
import { motion } from 'framer-motion';
import { Plus, Heart, MessageCircle, Share2, PenSquare, Bell } from 'lucide-react';
import { useAppStore } from '../store/appStore';
import GlassmorphismPopup from '../components/GlassmorphismPopup';

export default function CommunityFeedTab() {
  const { posts, likePost } = useAppStore();
  const [showFeedPopup, setShowFeedPopup] = useState(false);

  const feedOptions = [
    { label: 'Create Post', icon: <PenSquare size={20} />, onClick: () => console.log('Create post') },
    { label: 'Notifications', icon: <Bell size={20} />, onClick: () => console.log('View notifications') }
  ];

  return (
    <div className="min-h-screen bg-gray-50 pb-20">
      {/* Header */}
      <div className="bg-white border-b border-gray-200 sticky top-0 z-10">
        <div className="max-w-lg mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <h1 className="text-2xl font-bold text-gray-900">Community</h1>
            <button
              onClick={() => setShowFeedPopup(true)}
              className="p-2 rounded-full hover:bg-gray-100 transition-colors"
            >
              <Plus size={24} className="text-gray-700" />
            </button>
          </div>
        </div>
      </div>

      {/* Feed */}
      <div className="max-w-lg mx-auto">
        {posts.map((post, index) => (
          <motion.div
            key={post.id}
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: index * 0.1 }}
            className="bg-white border-b border-gray-200"
          >
            {/* Post Header */}
            <div className="flex items-center gap-3 px-4 py-3">
              <div className="w-10 h-10 rounded-full bg-gradient-to-br from-orange-400 to-pink-500 flex items-center justify-center text-white font-semibold">
                {post.author.charAt(0)}
              </div>
              <div className="flex-1">
                <h3 className="font-semibold text-gray-900">{post.author}</h3>
                <p className="text-xs text-gray-500">
                  {new Date(post.timestamp).toLocaleDateString('en-US', {
                    month: 'short',
                    day: 'numeric',
                    hour: 'numeric',
                    minute: '2-digit'
                  })}
                </p>
              </div>
              <button className="p-2 hover:bg-gray-100 rounded-full transition-colors">
                <Share2 size={18} className="text-gray-600" />
              </button>
            </div>

            {/* Post Content */}
            <div className="px-4 pb-3">
              <p className="text-gray-800 leading-relaxed">{post.content}</p>
            </div>

            {/* Post Image */}
            {post.imageUrl && (
              <div className="aspect-[4/3] bg-gray-200 relative">
                <div className="absolute inset-0 flex items-center justify-center text-gray-400">
                  <PenSquare size={48} />
                </div>
              </div>
            )}

            {/* Post Actions */}
            <div className="flex items-center justify-around px-4 py-3 border-t border-gray-100">
              <button
                onClick={() => likePost(post.id)}
                className={`flex items-center gap-2 px-4 py-2 rounded-lg transition-all ${
                  post.liked
                    ? 'text-red-500 bg-red-50'
                    : 'text-gray-600 hover:bg-gray-50'
                }`}
              >
                <Heart size={20} fill={post.liked ? 'currentColor' : 'none'} />
                <span className="text-sm font-medium">{post.likes}</span>
              </button>
              
              <button className="flex items-center gap-2 px-4 py-2 rounded-lg text-gray-600 hover:bg-gray-50 transition-all">
                <MessageCircle size={20} />
                <span className="text-sm font-medium">{post.comments}</span>
              </button>
              
              <button className="flex items-center gap-2 px-4 py-2 rounded-lg text-gray-600 hover:bg-gray-50 transition-all">
                <Share2 size={20} />
                <span className="text-sm font-medium">Share</span>
              </button>
            </div>
          </motion.div>
        ))}
      </div>

      {/* Glassmorphism Popup */}
      <GlassmorphismPopup
        isOpen={showFeedPopup}
        onClose={() => setShowFeedPopup(false)}
        options={feedOptions}
        position="top-right"
      />
    </div>
  );
}
