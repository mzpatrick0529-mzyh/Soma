import { useState } from 'react';
import { motion } from 'framer-motion';
import { Plus, Star, Download, DollarSign, Lock, Globe, Upload, TrendingUp, Wallet } from 'lucide-react';
import { useAppStore } from '../store/appStore';
import GlassmorphismPopup from '../components/GlassmorphismPopup';

export default function AIMarketplaceTab() {
  const { aiAvatars } = useAppStore();
  const [showMarketPopup, setShowMarketPopup] = useState(false);

  const marketOptions = [
    { label: 'Publish AI Avatar', icon: <Upload size={20} />, onClick: () => console.log('Publish AI') },
    { label: 'My Spending', icon: <TrendingUp size={20} />, onClick: () => console.log('View spending') },
    { label: 'My Earnings', icon: <Wallet size={20} />, onClick: () => console.log('View earnings') }
  ];

  return (
    <div className="min-h-screen bg-gray-50 pb-20">
      {/* Header */}
      <div className="bg-white border-b border-gray-200 sticky top-0 z-10">
        <div className="max-w-lg mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <div>
              <h1 className="text-2xl font-bold text-gray-900">AI Marketplace</h1>
              <p className="text-sm text-gray-600 mt-1">Discover & publish AI avatars</p>
            </div>
            <button
              onClick={() => setShowMarketPopup(true)}
              className="p-2 rounded-full hover:bg-gray-100 transition-colors"
            >
              <Plus size={24} className="text-gray-700" />
            </button>
          </div>
        </div>
      </div>

      {/* Categories */}
      <div className="max-w-lg mx-auto px-4 py-4">
        <div className="flex gap-2 overflow-x-auto pb-2 scrollbar-hide">
          {['All', 'Popular', 'Free', 'Premium', 'New'].map((category) => (
            <button
              key={category}
              className={`px-4 py-2 rounded-full whitespace-nowrap text-sm font-medium transition-all ${
                category === 'All'
                  ? 'bg-blue-600 text-white'
                  : 'bg-white text-gray-700 hover:bg-gray-100'
              }`}
            >
              {category}
            </button>
          ))}
        </div>
      </div>

      {/* AI Avatars Grid */}
      <div className="max-w-lg mx-auto px-4 pb-4">
        <div className="grid grid-cols-1 gap-4">
          {aiAvatars.map((avatar, index) => (
            <motion.div
              key={avatar.id}
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: index * 0.1 }}
              className="bg-white rounded-2xl shadow-sm overflow-hidden hover:shadow-md transition-shadow"
            >
              {/* Avatar Header */}
              <div className="p-4 flex items-start gap-4">
                <div className="w-16 h-16 rounded-2xl bg-gradient-to-br from-purple-500 via-pink-500 to-orange-500 flex items-center justify-center text-white text-2xl font-bold flex-shrink-0">
                  {avatar.name.charAt(0)}
                </div>
                
                <div className="flex-1 min-w-0">
                  <div className="flex items-start justify-between gap-2">
                    <h3 className="font-bold text-gray-900 text-lg">{avatar.name}</h3>
                    {avatar.access === 'public' ? (
                      <Globe size={16} className="text-green-600 flex-shrink-0" />
                    ) : (
                      <Lock size={16} className="text-gray-600 flex-shrink-0" />
                    )}
                  </div>
                  
                  <p className="text-sm text-gray-600 mt-1">by {avatar.creator}</p>
                  
                  {/* Stats */}
                  <div className="flex items-center gap-4 mt-2">
                    <div className="flex items-center gap-1 text-yellow-500">
                      <Star size={14} fill="currentColor" />
                      <span className="text-sm font-medium text-gray-700">{avatar.rating}</span>
                    </div>
                    <div className="flex items-center gap-1 text-gray-500">
                      <Download size={14} />
                      <span className="text-sm">{avatar.downloads.toLocaleString()}</span>
                    </div>
                  </div>
                </div>
              </div>

              {/* Description */}
              <div className="px-4 pb-4">
                <p className="text-sm text-gray-700 leading-relaxed">{avatar.description}</p>
              </div>

              {/* Footer */}
              <div className="px-4 py-3 bg-gray-50 flex items-center justify-between border-t border-gray-100">
                <div className="flex items-center gap-2">
                  {avatar.isPremium ? (
                    <>
                      <DollarSign size={18} className="text-green-600" />
                      <span className="font-bold text-gray-900">${avatar.price}</span>
                    </>
                  ) : (
                    <span className="font-bold text-green-600">Free</span>
                  )}
                </div>
                
                <button className="px-6 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-full text-sm font-semibold transition-colors">
                  {avatar.isPremium ? 'Purchase' : 'Add'}
                </button>
              </div>
            </motion.div>
          ))}
        </div>
      </div>

      {/* Glassmorphism Popup */}
      <GlassmorphismPopup
        isOpen={showMarketPopup}
        onClose={() => setShowMarketPopup(false)}
        options={marketOptions}
        position="top-right"
      />
    </div>
  );
}
